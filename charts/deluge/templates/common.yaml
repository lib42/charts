---
{{- include "bjw-s.common.loader.init" . }}

{{- define "deluge.hardcodedValues" -}}
# Main Container will run web-server
command: [ "/usr/local/bin/deluge-web" ]
args: [ "-d", "-c", "/config", "-L", "info" ]

podSecurityContext:
  fsGroup: 1000

securityContext:
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL

initContainers:
  init-config:
    image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
    command: ["/bin/sh"]
    args: [ "-c", "([ ! -f /config/core.conf ] && cp -v /defaults/core.conf /config/core.conf) || true"]
    volumeMounts:
    {{- range $k, $v := $.Values.persistence }}
      {{- if $v.enabled }}
    - name: {{ $k }}
      mountPath: {{ $v.mountPath }}
      {{- end }}
    {{- end }}
    securityContext:
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL

additionalContainers:
  deluge-daemon:
    image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
    volumeMounts:
    {{- range $k, $v := $.Values.persistence }}
      {{- if $v.enabled }}
    - name: {{ $k }}
      mountPath: {{ $v.mountPath }}
      {{- end }}
    {{- end }}
    securityContext:
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL

{{- end -}}
{{- $_ := mergeOverwrite .Values (include "deluge.hardcodedValues" . | fromYaml) -}}


{{/* Render the templates */}}
{{ include "bjw-s.common.loader.generate" . }}
