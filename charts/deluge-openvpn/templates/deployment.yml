apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-deployment"
  labels:
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: "{{  .Chart.Name }}-selector"
      version: "current"
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: "{{  .Chart.Name }}-selector"
        version: "current"
    spec:
      securityContext:
        fsGroup: 911
      volumes:
        - name: {{ .Values.openvpn.existingSecret | default "vpn-config" }}
          secret:
            secretName: {{ .Values.openvpn.existingSecret | default "vpn-config" }}
            items:
              - key: client.ovpn
                path: client.ovpn
              - key: auth.txt
                path: auth.txt
              - key: ca.crt
                path: ca.crt
        - name: route-script
          configMap:
            name: route-script
            items:
              - key: route-override.sh
                path: route-override.sh
            defaultMode: 0777
        - name: deluge-config
          persistentVolumeClaim:
            claimName: "{{ .Chart.Name }}-deluge-config"
        - name: downloads
          hostPath:
            path: {{ .Values.deluge.downloadDir | default "/data/torrent" }}
            type: Directory
      containers:
      - name: "{{  .Chart.Name  }}-openvpn-client"
        image: "{{ .Values.openvpn.image }}:{{ .Values.openvpn.tag }}"
        imagePullPolicy: {{ .Values.pullPolicy | default "IfNotPresent" }}
        command: ["/bin/sh","-c"]
        args: ["openvpn --config 'vpn/client.ovpn' --auth-user-pass 'vpn/auth.txt' --script-security 3 --route-up /vpn/route-override.sh;"]
        stdin: true
        tty: true
        securityContext:
          privileged: true
          capabilities:
            add:
              - NET_ADMIN
        env:
          - name: TZ
            value: {{ .Values.timezone | default "Europe/Amsterdam" }}
        volumeMounts:
          - name: vpn-config
            mountPath: /vpn/client.ovpn
            subPath: client.ovpn
          - name: vpn-config
            mountPath: /vpn/auth.txt
            subPath: auth.txt
          - name: vpn-config
            mountPath: /vpn/ca.crt
            subPath: ca.crt
          - name: route-script
            mountPath: /vpn/route-override.sh
            subPath: route-override.sh
        resources:
          requests:
            cpu: "{{ .Values.openvpn.resources.requests.cpu }}"
            memory: "{{ .Values.openvpn.resources.requests.memory }}"
        {{- if .Values.openvpn.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.openvpn.livenessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.openvpn.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.openvpn.readinessProbe | indent 10 }}
        {{- end }}
      - name: "{{ .Chart.Name }}-deluge"
        image: {{ .Values.deluge.image }}:{{ .Values.deluge.tag }}
        ports:
          - name: "http-deluge-web"
            containerPort: 8112
            protocol: TCP
          - name: "tcp-deluge"
            containerPort: 58846
            protocol: TCP
        volumeMounts:
          - name: downloads
            mountPath: /downloads
          - name: deluge-config
            mountPath: /config
      dnsConfig:
        nameservers:
          {{- range .Values.nameserver }}
          - {{ . }}
          {{- end }}
