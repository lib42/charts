{{- if .Values.podSecurityPolicy.enabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: Group
  apiGroup: rbac.authorization.k8s.io
  name: system:serviceaccounts:default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - {{ .Release.Name }}-{{ .Chart.Name }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}
  labels: {}
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
    volumes:
      - configMap
      - secret
      - persistentVolumeClaim
      - emptyDir
      - projected
    seLinux:
      rule: RunAsAny
    runAsUser:
      rule: MustRunAsNonRoot
    supplementalGroups:
      rule: MustRunAs
      ranges:
        - min: 1
          max: 65535
    fsGroup:
      rule: MustRunAs
      ranges:
        - min: 1
          max: 65535
    allowPrivilegeEscalation: false
    privileged: false
    requiredDropCapabilities:
    - ALL
    hostNetwork: true
    hostIPC: false
    hostPID: false
    readOnlyRootFilesystem: true
{{- end -}}
